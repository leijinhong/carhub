---
import Footer from "../components/elements/Footer.astro";
import Navbar from "../components/elements/Navbar.astro";

export interface Props {
    title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <meta name="description" content="AgenceX - SEO Agency website landing page made with ASTROJS and TAILWINDCSS" />
        <title>AgenceX - {title}</title>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Raleway:wght@300;400;500;600;700&display=swap" />
        <link rel="stylesheet" href="/styles/globals.css" />
    </head>
    <body class="overflow-y-auto bg-background">
        <Navbar />
        <slot />
        <Footer />
    </body>
    <!-- 主题切换 -->
    <script>
        const switchTheme = document.querySelector("[data-switch-theme]") as HTMLButtonElement;

        // 用户初始用户默认为暗色还是亮色
        if (
            localStorage.getItem("appTheme") === "dark" ||
            // 本地存储没有appTheme && 用户首选颜色为暗色
            (!("appTheme" in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches)
        ) {
            document.documentElement.classList.add("dark");
        } else {
            document.documentElement.classList.remove("dark");
        }

        if (switchTheme) {
            // 切换主题按钮
            switchTheme.addEventListener("click", (e) => {
                e.preventDefault();
                const doc = document.documentElement;
                if (doc) {
                    if (localStorage.getItem("appTheme")) {
                        if (localStorage.getItem("appTheme") === "light") {
                            doc.classList.add("dark");
                            localStorage.setItem("appTheme", "dark");
                        } else {
                            document.documentElement.classList.remove("dark");
                            localStorage.setItem("appTheme", "light");
                        }
                    } else {
                        // 当前html是否有 dark 类名
                        if (doc.classList.contains("dark")) {
                            doc.classList.remove("dark");
                            localStorage.setItem("appTheme", "light");
                        } else {
                            doc.classList.add("dark");
                            localStorage.setItem("appTheme", "dark");
                        }
                    }
                }
            });
        }
    </script>
</html>
<style is:global>
    [data-toggle-nav][data-open-nav="true"] #line1 {
        transform: translateY(0.375rem) rotate(40deg);
    }
    [data-toggle-nav][data-open-nav="true"] #line2 {
        transform: scaleX(0);
        opacity: 0;
    }
    [data-toggle-nav][data-open-nav="true"] #line3 {
        transform: translateY(-0.375rem) rotate(-40deg);
    }

    [data-nav-overlay][data-is-visible="true"] {
        visibility: visible;
        display: flex;
    }
</style>
